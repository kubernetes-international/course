=== Goal for the lesson ====
- Add "develop chain" logic to source code repositories  

=== Plan ===
- overview for 3 source code repositories (simple applications on node, php and python to show that this logic is applicable to the most source code microservices)
- remember develop branch and see which part we are checking
- review Dockerfile
- review Jenkinsfile

=== Instructions ===

1) source code repositories
https://github.com/kubernetes-international/ms1
https://github.com/kubernetes-international/ms2
https://github.com/kubernetes-international/ms3

2) Dockerfile example

FROM python:3.6
COPY ./src/ /app
WORKDIR /app
RUN pip install -r requirements.txt
ENTRYPOINT ["python"]
CMD ["app.py"]


3) Jenkinsfile example
pipeline {
	agent any
	stages {
		stage("Checkout code") {
			steps {
				checkout scm
			}
		}


	// Develop chain

		stage('Build image with tag latest for develop branch') {
			when{
				expression{env.GIT_BRANCH == 'origin/develop'}
			}
			steps{
				script {
					ms1 = docker.build("fourth-memento-307608/ms1","-f ./cicd/Dockerfile ./ ")
				}
			}
		}

		stage('Push image with tag latest for develop branch') {
			when{
				expression{env.GIT_BRANCH == 'origin/develop'}
			}
			steps{
				script {
					docker.withRegistry('https://eu.gcr.io', 'gcr:gcr-admin-key') {
						ms1.push("latest")
					}                    
				}
			}
		}

		stage ('Deploy image on dev cluster') {
			when{
				expression{env.GIT_BRANCH == 'origin/develop'}
			}
			steps{
				build job: 'deploy-to-k8s'
			}    
		}
	}
}
